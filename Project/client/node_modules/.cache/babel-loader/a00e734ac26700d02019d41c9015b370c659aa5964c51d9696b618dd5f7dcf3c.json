{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3002/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`Making ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} request to ${config.url}`);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\nexport const fetchStocks = async () => {\n  try {\n    const response = await api.get('/stocks');\n    return response.data.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch stocks');\n  }\n};\nexport const fetchStockDetail = async symbol => {\n  try {\n    const response = await api.get(`/stocks/${symbol}`);\n    return response.data.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to fetch stock details');\n  }\n};\nexport const fetchRecommendations = async (params = {}) => {\n  try {\n    const response = await api.get('/recommendations', {\n      params\n    });\n    return response.data.data;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to fetch recommendations');\n  }\n};\nexport const fetchTopRecommendations = async (limit = 10, type = 'all') => {\n  try {\n    const response = await api.get('/recommendations/top', {\n      params: {\n        limit,\n        type\n      }\n    });\n    return response.data.data;\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to fetch top recommendations');\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","_error$response","data","message","fetchStocks","get","_error$response2","_error$response2$data","Error","fetchStockDetail","symbol","_error$response3","_error$response3$data","fetchRecommendations","params","_error$response4","_error$response4$data","fetchTopRecommendations","limit","type","_error$response5","_error$response5$data"],"sources":["/Users/firy/Library/Mobile Documents/com~apple~CloudDocs/Final Year Project/Project/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3002/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    console.log(`Making ${config.method?.toUpperCase()} request to ${config.url}`);\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\nexport const fetchStocks = async () => {\n  try {\n    const response = await api.get('/stocks');\n    return response.data.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || 'Failed to fetch stocks');\n  }\n};\n\nexport const fetchStockDetail = async (symbol) => {\n  try {\n    const response = await api.get(`/stocks/${symbol}`);\n    return response.data.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || 'Failed to fetch stock details');\n  }\n};\n\nexport const fetchRecommendations = async (params = {}) => {\n  try {\n    const response = await api.get('/recommendations', { params });\n    return response.data.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || 'Failed to fetch recommendations');\n  }\n};\n\nexport const fetchTopRecommendations = async (limit = 10, type = 'all') => {\n  try {\n    const response = await api.get('/recommendations/top', {\n      params: { limit, type }\n    });\n    return response.data.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || 'Failed to fetch top recommendations');\n  }\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}